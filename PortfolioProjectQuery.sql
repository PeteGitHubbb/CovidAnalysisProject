-- Dec 6th 2023
-- Firstly create the database
CREATE DATABASE PortfolioProject
-------------------------------
-- Create a table for importing the .csv file downloaded (generated by python)


-- import the data from the .csv file into the table created above (eventually didn't use this)
BULK INSERT CovidVaccines
FROM 'C:/Users/petewang/Downloads/CovidVaccinations.csv'
WITH (
    FIELDTERMINATOR = ',', 
    ROWTERMINATOR = '\n',
    FIRSTROW = 2 -- If your CSV file has a header row, use 2 to skip it
);


-- imported data using the extension from Azure Data Studio (import wizard)
SELECT *
FROM PortfolioProject.dbo.CovidDeaths
ORDER BY 3, 4

SELECT *
FROM PortfolioProject.dbo.CovidVaccinations
ORDER BY 3, 4


SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM PortfolioProject.dbo.CovidDeaths
order BY 1, 2

-- made a mistake on CovidDeaths table
-- DROP table if EXISTS CovidDeaths

-- looking at total cases vs total deaths
SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage 
-- note that if the total_deaths and total_cases are of type int, it's going to perform integer division.
FROM PortfolioProject.dbo.CovidDeaths
order BY 1, 2

-- looking at total death percentage
-- shows the likelihood of dying if you contract covid in your contry
SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage 
-- note that if the total_deaths and total_cases are of type int, it's going to perform integer division.
FROM PortfolioProject.dbo.CovidDeaths
WHERE Location like '%states%'
order BY 1, 2

-- looking at total cases vs population
SELECT Location, date, total_cases, Population, (total_cases/Population)*100 as PercentPopulationInfected 
FROM PortfolioProject.dbo.CovidDeaths
WHERE Location like '%states%'
order BY 1, 2

-- before continue just count the number of countries:
SELECT Location, count(Location) 
FROM PortfolioProject.dbo.CovidDeaths
GROUP BY Location
-- attemp to count the number of countries that I am analyzing:
SELECT COUNT(distinct Location) AS NumOfCountries
FROM PortfolioProject.dbo.covidDeaths
----------------------------------

-- looking at contries with higest infection rate compared to population
SELECT Location, Population, MAX(total_cases) as HighestinfectionCountry, MAX((total_cases/Population))*100 as 
PercentPopulationInfected
FROM PortfolioProject.dbo.CovidDeaths
GROUP BY Location, Population
ORDER BY PercentPopulationInfected DESC

-- showing countries with highest death count per population
SELECT Location, MAX(Total_deaths) as TotalDeathCount
FROM PortfolioProject.dbo.CovidDeaths
WHERE continent is not NULL
GROUP BY Location
ORDER BY TotalDeathCount DESC

-- let's break things down by continent
SELECT continent, MAX(Total_deaths) as TotalDeathCount
FROM PortfolioProject.dbo.CovidDeaths
WHERE continent is not NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC


-- Showing continents with the highest death count per population
SELECT continent, MAX(Total_deaths) as TotalDeathCount
FROM PortfolioProject.dbo.CovidDeaths
WHERE continent is not NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC

-- global numbers
SELECT SUM(new_cases) as new_cases, SUM(new_deaths) as new_deaths, SUM(New_deaths)/SUM(New_Cases)*100 AS DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE continent is not NULL
--GROUP BY date
ORDER BY 1, 2


-- looking at the table covidvaccination
SELECT *
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac
    ON dea.Location = vac.Location 
    and dea.date = vac.date


--------------------
-- Dec 26th 2021 Tue
-- Looking at Total Population vs Vaccinations
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location) AS total_new_vac_by_loc
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac 
    ON dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not NULL
order by 2,3


-- Looking at Total Population vs Vaccinations (count the new vaccination on a rolling basis)
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location Order by dea.location, dea.date) AS rolling_prople_vaccinated
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac 
    ON dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not NULL
order by 2,3

-- adding a rolling_prople_vac / population ratio using CTE
WITH PopvsVac (Continent, Location, Date, Population, New_Vaccinations, rolling_people_vac)
AS
(
    SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
    , SUM(vac.new_vaccinations) OVER (partition by dea.location order by dea.location, dea.date) as rolling_people_vac
    FROM PortfolioProject..CovidDeaths dea 
    JOIN PortfolioProject..CovidVaccinations vac 
        ON dea.location = vac.location
        and dea.date = vac.date
    where dea.continent is not null
)
SELECT *, (rolling_people_vac/Population) * 100 as new_vec_pop_percentage
FROM PopvsVac

-- adding a rolling_people_vac / population ratio using temp table
DROP TABLE if EXISTS #PercentPopulationVaccinated
CREATE table #PercentPopulationVaccinated
(
    continent nvarchar(255),
    Location nvarchar(255),
    Date datetime,
    Population numeric,
    new_vaccinations numeric,
    rolling_people_vac numeric 
)

insert into #PercentPopulationVaccinated
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (partition by dea.location order by dea.location,
dea.date) as rolling_people_vac
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac
    ON dea.location = vac.[location]
    and dea.date = vac.[date]
where dea.continent is not NULL

SELECT *, (rolling_people_vac/Population) * 100 as new_vec_pop_percentage
FROM #PercentPopulationVaccinated

--
GO -- use go at the end of a statment to separate batches 
-- one batch can only have a create view and nothing else. 
-- creating a view
CREATE view PercentPopulationVaccinated AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (partition by dea.location order by dea.location,
dea.date) as rolling_people_vac
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac 
    ON dea.location = vac.[location]
    and dea.date = vac.[date]
where dea.continent is not NULL
GO

SELECT *
from PercentPopulationVaccinated